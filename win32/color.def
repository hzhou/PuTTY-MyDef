
# ---- Colors -----------------------------------------
subcode:: function_list
    $define(NALLCOLOURS) 16+240+6
    $global COLORREF colours[NALLCOLOURS]

subcode: init_colors
    $call fill_color_config
    $call fill_color_216, colours, 16
    $call fill_gray_24,   colours, 232
    $call get_system_colour

subcode: fill_color_config
    # 6 + 16
    $localinit pn_color_idx_map[]={256,257,258,259,260,261,0,8,1,9,2,10,3,11,4,12,5,13,6,14,7,15}
    $for i=0:22
	tn_i = pn_color_idx_map[i];
	colours[tn_i]=RGB(cfg.colours[i][0], cfg.colours[i][1], cfg.colours[i][2])

subcode: get_system_colour
    $if cfg.system_colour
	colours[COLOR_DEFFG]=GetSysColor(COLOR_WINDOWTEXT)
	colours[COLOR_DEFFG_BOLD]=GetSysColor(COLOR_WINDOWTEXT)
	colours[COLOR_DEFBG]=GetSysColor(COLOR_WINDOW)
	colours[COLOR_DEFBG_BOLD]=GetSysColor(COLOR_WINDOW)
	colours[COLOR_CURFG]=GetSysColor(COLOR_HIGHLIGHTTEXT)
	colours[COLOR_CURBG]=GetSysColor(COLOR_HIGHLIGHT)

subcode: main_on_WM_SYSCOLORCHANGE
    $if cfg.system_colour
	$call get_system_colour
	term_invalidate(term);

subcode: translate_color_index
    $if tn_i >= 16
	tn_i += 256 - 16;
    $if tn_i > NALLCOLOURS
	return;

fncode: palette_set(void * frontend, tn_i, tn_r, tn_g, tn_b)
    $call translate_color_index
    colours[tn_i] = RGB(tn_r, tn_g, tn_b);
    $if tn_i == (ATTR_DEFBG>>ATTR_BGSHIFT)
	InvalidateRect(hwnd, NULL, TRUE);

fncode: palette_reset(void * frontend)
    InvalidateRect(hwnd, NULL, TRUE);

# ===========================================================
subcode:: function_list
    $list show_mouseptr
    $call optional_global

fncode: show_mouseptr(b_show)
    $local static b_cursor_visible=1
    $if !cfg.hide_mouseptr
	b_show = 1;
    $if b_cursor_visible && !b_show
	ShowCursor(FALSE);
    $elif !b_cursor_visible && b_show
	ShowCursor(TRUE);
    b_cursor_visible = b_show;
# ----
subcode:@ optional_global
    $list palette_set, palette_reset
    $list set_busy_status, set_raw_mouse_mode

fncode:@ set_busy_status(void *frontend, tn_status)
    return
fncode:@ set_raw_mouse_mode(void *frontend, tn_activate)
    return

