include: autoload.def

include: macro/misc.def
include: macro/charset.def
include: macro/attr.def
include: macro/clist.def
include: macro/bufchain.def

include: term/main.def
include: term/misc.def
include: term/cursor.def
include: term/line.def
include: term/alt.def
include: term/scrollback.def
#include: term/selection.def
#include: term/paste.def
include: term/term_out.def
include: term/paint.def

page: term
    autoload: h
    subcode: main
	$define(snprintf) sprintf_s
	$global extern HWND hwnd_main
	$(set:this=term->)
	$register_prefix(pos) pos
	$register_name(p_line) termline *

	$call attr_defines
	$call charset_defines
	$call declare_cmap
	$global extern int line_codepage
	$declare void linedisc_send(char * s_buf, int n_len)

	$write_h(term) struct-tagTerminal

	$call @global
	$call @function_list

# --------------------------
subcode: term_decl(var)
    $struct(tagTerminal) $(var)

subcode: term_get_config(name, var, default)
    $call term_decl,  $(var)
    $call get_config, $(name), $(this)$(var), $(default)

# -- init & finish ------------------------
subcode:: function_list
    $list term_init, term_free

fncode: term_init
    $return_type Terminal *
    $local Terminal * term
    term = &g_term
    $map term_decl, int cols, int rows, struct clist * screen
    $.rows=-1
    $.cols=-1
    $.screen = NULL
    $call @on_term_init
    power_on(term, TRUE);
    return term

fncode: term_free(Terminal *term)
    $call @on_term_finish
    expire_timer_context(term);

# -- term_data -----------
subcode:: function_list
    $list term_data

subcode:: on_term_init
    $map term_decl, b_in_term_out, struct bufchain_list inbuf
    $.b_in_term_out=0
    $call bufchain_init, $.inbuf

subcode:: on_term_finish
    $call bufchain_clear, $.inbuf

fncode: term_data(Terminal *term, ts_data, tn_len)
    #$call debug_term_data
    $call bufchain_add, $.inbuf, ts_data, tn_len
    $call @do_term_data, ts_data, tn_len
    return 0

subcode: debug_term_data
    $local ts_temp[101]
    $if tn_len<100
	strncpy(ts_temp, ts_data, tn_len)
	ts_temp[tn_len]='\0'
	print "termdata [%d] %s\n", tn_len, ts_temp
# -------------
subcode:: function_list
    $list term_notify

fncode: term_notify(Terminal *term, ts_event)
    $if strcmp(ts_event, "key")==0
	$call on_term_key_event
    $elif strcmp(ts_event, "paint")==0
	term_invalidate(term)

