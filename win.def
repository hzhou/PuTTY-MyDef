include: autoload.def

include: macro/attr.def

include: win32/main.def
include: win32/debug.def
#include: win32/sock.def
#include: win32/commandline.def
#include: win32/wndproc.def
#include: win32/tray.def
#include: win32/util.def
include: win32/font.def
#include: win32/clipboard.def
#include: win32/resize.def
#include: win32/other.def
#include: win32/frontend.def
#include: win32/menu.def
include: win32/time.def
#include: win32/keyboard.def
#include: hack.def
#include: mouse.def
#include: palette.def
#include: win32/color.def

include: win32/linedisc_unicode.def

#include: front/line_discipline.def
#include: front/get_userpass.def
#include: front/paste.def

# ----------------------------------------------------
page: main
    autoload: h
    subcode: main
	$(set:appname=PuTTY-MyDef)
	$declare TERM term_init()
	$declare TERM term_free(TERM)
	$declare int term_data(TERM, char *, int)
	$declare void term_notify(TERM, char *)

	$declare void term_scroll(TERM, int, int)
	$call attr_defines
	$call charset_defines
	#$include storage.h
	#$include win_res.h
	$typedef void * TERM
	#$symbol char * appname
	$call @global
	$call @function_list
	$list WinMain

subcode:: global
    $struct(tagWindow) HWND hwnd
    $global struct tagWindow win
    $(set:this=win.)

subcode: win_get_config(name, var, default)
    $global $(var)
    $call get_config, $(name), $(var), $(default)

# ---- line discipline -------------------------------------
subcode:: global
    $list linedisc_send

fncode: linedisc_send(s_buf, n_len)
    #print linedisc_send [$n_len]
    $if !back
	return
    $if n_len>0
	$call @line_discipline_edit
	$call @line_discipline_echo
	back->send(back, s_buf, n_len)

# ---- Front End -------------------------------------------
subcode:: global
    $list from_backend, from_terminal

fncode: from_backend(ts_buf, tn_len)
    $return_type int
    return term_data(term, ts_buf, tn_len)

subcode:: WinMain_PreLoop
    $global n_msg_loop_started=0
    n_msg_loop_started=1

fncode: from_terminal(ts_msg, char * data)
    $if !n_msg_loop_started
	return
    $if strncmp(ts_msg, "text", 5)==0
	$local tn_x, tn_y, tn_attr, tn_count, wchar_t * tp_text
	$unpack data, "4444s", tn_x, tn_y, tn_attr, tn_count, tp_text
	$call debug, "text (%d, %d) %d [%c %c %c ...]\n", tn_x, tn_y, tn_count, tp_text[0], tp_text[1], tp_text[2]
	do_text(tn_x, tn_y, tp_text, tn_count, tn_attr)
    $elif strncmp(ts_msg, "scrollbar", 10)==0
	$local tn_total, tn_pos, tn_page
	$unpack data, "444", tn_total, tn_pos, tn_page
	$call @set_scrollbar, tn_total, tn_pos, tn_page
