subcode: attr_defines
    $define(ATTR_INVALID) 0x03FFFFU
    # 6 bit attributes
    $define(ATTR_NARROW)  0x800000U
    $define(ATTR_WIDE)    0x400000U
    $define(ATTR_BLINK)   0x200000U
    $define(ATTR_REVERSE) 0x100000U
    $define(ATTR_UNDER)   0x080000U
    $define(ATTR_BOLD)    0x040000U
    # 9 bit FG color and 9 bit BG color
    $define(ATTR_FGSHIFT) 0
    $define(ATTR_BGSHIFT) 9
    $define(ATTR_FGMASK)  0x0001FFU
    $define(ATTR_BGMASK)  0x03FE00U
    $define(ATTR_COLOURS) 0x03FFFFU
    # 0-7 are ANSI colours (KRGYBMCW)
    # 8-15 are bold version of those colors
    # 16-231 are 6 x 6 x 6 color cube
    # 232-255 are 24 gray levels
    $define(COLOR_DEFFG) 256
    $define(COLOR_DEFFG_BOLD) 257
    $define(COLOR_DEFBG) 258
    $define(COLOR_DEFBG_BOLD) 259
    $define(COLOR_CURFG) 260
    $define(COLOR_CURBG) 261
    $define(ATTR_DEFFG) (COLOR_DEFFG<<ATTR_FGSHIFT)
    $define(ATTR_DEFBG) (COLOR_DEFBG<<ATTR_BGSHIFT)
    $define(ATTR_DEFAULT) (ATTR_DEFFG | ATTR_DEFBG)

# ----
subcode: fill_color_216(list, offset)
    $local pc_color6[]={0,95,135,175,215,255}
    tn_i=$(offset)
    $for tn_r=0:6
	$for tn_g=0:6
	    $for tn_b=0:6
		$(list)[tn_i]=RGB(pc_color6[tn_r], pc_color6[tn_g], pc_color6[tn_b])
		tn_i++

subcode: fill_gray_24(list, offset)
    $for tn_i=0:24
	tn_shade=tn_i*10+8
	$(list)[tn_i+$(offset)]=RGB(tn_shade, tn_shade, tn_shade)

subcode: match_color_6(r, n)
    $(n)=(($(r))-55+20)/40
    $if $(n)<0
	$(n)=0
    $if $(n)>5
	$(n)=5

subcode: match_color_216(r, g, b, n)
    $call match_color_6, $(r), tn_r
    $call match_color_6, $(g), tn_g
    $call match_color_6, $(b), tn_b
    $(n)=tn_r*36+tn_g*6+tn_b

# ----
subcode: set_attr_fg(attr, n)
    $(attr) &= ~ATTR_FGMASK
    $(attr) |= ($(n))

subcode: set_attr_bg(attr, n)
    $(attr) &= ~ATTR_BGMASK
    $(attr) |= ($(n))<<ATTR_BGSHIFT

subcode: get_attr_fg(attr, n)
    $(n)= $(attr) & ATTR_FGMASK

subcode: get_attr_bg(attr, n)
    $(n)= ($(attr) & ATTR_BGMASK) >> ATTR_BGSHIFT

