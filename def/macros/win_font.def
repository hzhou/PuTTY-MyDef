subcode:: WinMain_Init
    $uselib gdi32
    init_font("Consolas", 12)

subcode: test_font
    &call quick_gdi, fonts[0]
        $for i=0:n_rows
            $for j=0:n_cols
                tn_x = j*font_width+offset_width
                tn_y = i*font_height+offset_height
                TextOut(hdc, tn_x, tn_y, "X", 1)

#---------------------------------------- 
macros: 
    NUM_FONTS: 20
    FONT_NORMAL: 0
    FONT_BOLD: 1
    FONT_UNDERLINE: 2


fncode: init_font(s_fontname, n_fontsize)
    $global HFONT fonts[$(NUM_FONTS)]
    $for i=0:$(NUM_FONTS)
        fonts[i] = NULL

    $call create_font, 0, FW_DONTCARE, FALSE
    $call create_font, 1, FW_BOLD, FALSE
    $call create_font, 2, FW_DONTCARE, TRUE
    
    &call get_hdc, hwnd_main
        $call get_font_textmetric, fonts[0]

    subcode: create_font(i, weight, underline)
        fonts[$(i)] = CreateFont (n_fontsize, 0, 0, 0, $(weight), FALSE, $(underline), FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY, FIXED_PITCH | FF_DONTCARE, s_fontname)

    subcode: get_font_textmetric(font)
        $local TEXTMETRIC tm
        SelectObject(hdc, $(font))
        GetTextMetrics(hdc, &tm);

        $if tm.tmPitchAndFamily & TMPF_FIXED_PITCH
            # TMPF_FIXED_PITCH means the opposite!
            $call die, Font is not fixed pitch!

        $global int font_height, int font_width
        font_height = tm.tmHeight
        font_width = tm.tmAveCharWidth

        $global int font_descent
        font_descent = tm.tmAscent + 1
        $if font_descent>= font_height
            font_descent = font_height - 1

