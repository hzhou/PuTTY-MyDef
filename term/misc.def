# #### Blinking #################################################
subcode:: function_list
    $list term_text_blink_on_timer, term_cursor_blink_on_timer
    $list term_vbell_on_timer, term_update_on_timer

subcode:: on_term_init
    $map term_decl, int window_update_pending
    $map term_decl, int cblinker, int tblinker, int in_vbell
    $.window_update_pending=0

    $define(CURSORBLINK) GetCaretBlinkTime()
    $define(TICKSPERSEC) 1000
    $define(VBELL_TIMEOUT) (TICKSPERSEC/10)
    $define(TBLINK_DELAY)   ((TICKSPERSEC*9+19)/20)
    $define(CBLINK_DELAY)   (CURSORBLINK)
    $define(VBELL_DELAY)    (VBELL_TIMEOUT)
    $define(UPDATE_DELAY)   ((TICKSPERSEC+49)/50)
    $.cblinker = 0
    $.tblinker = 0
    $call term_start_text_blink
    $call term_start_cursor_blink

subcode:: on_term_power_on
    $.in_vbell = FALSE;

fncode: term_text_blink_on_timer(Terminal *term, long time_now)
    $.tblinker = !$.tblinker;
    schedule_timer(TBLINK_DELAY, term_text_blink_on_timer, term)
    term_update(term)

fncode: term_cursor_blink_on_timer(Terminal *term, long time_now)
    $.cblinker = !$.cblinker;
    schedule_timer(CBLINK_DELAY, term_cursor_blink_on_timer, term)
    term_update(term)

fncode: term_vbell_on_timer(Terminal *term, long time_now)
    $.in_vbell=0
    term_update(term)

fncode: term_update_on_timer(Terminal *term, long time_now)
    $.window_update_pending=0
    term_update(term)

# ----
subcode: term_start_text_blink
    $call term_get_config, "blink_is_real", b_blink_is_real, 0
    $if $.b_blink_is_real
	schedule_timer(TBLINK_DELAY, term_text_blink_on_timer, term)
subcode: term_start_cursor_blink
    $call term_get_config, "blink_cur", b_blink_cur, 0
    $if $.b_blink_cur
	schedule_timer(CBLINK_DELAY, term_cursor_blink_on_timer, term)
subcode: term_start_vbell
    $if !$.in_vbell
	$.in_vbell = 1
	schedule_timer(VBELL_DELAY, term_vbell_on_timer, term)
subcode: term_schedule_update
    $if !$.window_update_pending
	$.window_update_pending=1
	schedule_timer(UPDATE_DELAY, term_update_on_timer, term)

# ------------------
subcode:: function_list
    $list term_seen_key_event

subcode:: on_term_init
    $map term_decl, b_seen_disp_event
    $.b_seen_disp_event=0

subcode: seen_disp_event
    $.b_seen_disp_event=1
    $call term_schedule_update

# ------------------------------------------
subcode:: on_term_init
    $map term_decl, int selstate
    $enumbase() NO_SELECTION, ABOUT_TO, DRAGGING, SELECTED
    $.selstate=NO_SELECTION

subcode:: function_list
    $list term_copyall, term_deselect, term_nopaste

fncode: term_copyall(Terminal * term)
    return

fncode: term_deselect(Terminal * term)
    return

fncode: term_nopaste(Terminal * term)
    return
