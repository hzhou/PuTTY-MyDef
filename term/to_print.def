# ###### ANSI printing ##############################################
subcode:: on_term_init
    $map term_decl, struct bufchain_list printer_buf, printer_job *p_print_job
    $.p_print_job = NULL;
    $call bufchain_init, $.printer_buf

subcode: to_print_finish
    $if $.p_print_job
	printer_finish_job($.p_print_job);
    $call bufchain_clear, $.printer_buf

subcode:: on_term_power_on
    $call to_print_finish

subcode:: on_term_finish
    $call to_print_finish

subcode: term_do_MC
    $if $.n_esc_args==1
	$if $.pn_esc_args[0]==5 && cfg.printer
	    $call term_print_start

subcode: term_out_printing
    $if c == '\033'
	$.n_state_2 = 1
    $elif c == '[' && $.n_state_2 == 1
	$.n_state_2 = 2
    $elif c == '4' && $.n_state_2 == 2
	$.n_state_2 = 3
    $elif c == 'i' && $.n_state_2 == 3
	$call term_print_finish
    $else
	$if $.n_state_2>0
	    $call bufchain_add, $.printer_buf, "\033[4i", $.n_state_2
	$call bufchain_add, $.printer_buf, &c, 1
	$.n_state_2 = 0

subcode:: term_out_flush
    $if $.n_termstate==termstate_PRINTING
	$call term_print_flush

subcode: term_print_start
    $call bufchain_clear, $.printer_buf
    $.p_print_job = printer_start_job(cfg.printer);
    $.n_state_2=0
    $.n_termstate=termstate_PRINTING

subcode: term_print_finish
    $call term_print_flush
    printer_finish_job($.p_print_job);
    $.p_print_job = NULL;
    $.n_termstate = termstate_TOPLEVEL

subcode: term_print_flush
    &call bufchain_chunk_loop, $.printer_buf
	printer_job_data($.p_print_job, ts_tmp, tn_len);
